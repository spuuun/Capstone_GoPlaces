@model GoPlaces.Models.Place
@using Microsoft.Extensions.Configuration;
@inject IConfiguration Configuration
@{
    var APIKey = @Configuration["SecretValues:SecretApiKey"];
    var APIEndpointUrl = $"https://maps.googleapis.com/maps/api/js?key={APIKey}&callback=initMap";
}
<script async defer src=@APIEndpointUrl></script>
<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }
</style>
@{
    ViewData["Title"] = "Details";
}
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{var user = await UserManager.GetUserAsync(User);}

<h1>Details</h1>
<div>
    <h4>Place</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Latitude)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Latitude)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Longitude)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Longitude)
        </dd>
    </dl>
</div>
<div>
    @{ if (user != null)
        {
            if (Model.Adventure.UserId == user.Id)
            {
                <a asp-action="Edit" asp-route-id="@Model.PlaceId">Edit</a> <span>|</span>
            }
        }
    }
    <a asp-controller="Adventures" asp-action="Details" asp-route-id="@Model.AdventureId">Back to List</a>
</div>



<!--The div element for the map -->
<div id="map"></div>
<script>
        // Initialize and add the map
        function initMap() {
            var place = { lat: @Model.Latitude, lng: @Model.Longitude};

            // The map, centered on THIS place
            var map = new google.maps.Map(
                document.getElementById('map'), {
                    zoom: 17,
                    center: place
            });
            var marker = new google.maps.Marker({position: place, map: map});
        }
</script>
