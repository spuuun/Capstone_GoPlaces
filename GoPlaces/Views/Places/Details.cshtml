@model GoPlaces.Models.Place

@{
    ViewData["Title"] = "Details";
}
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{var user = await UserManager.GetUserAsync(User);}

<h1>Details</h1>

<div>
    <h4>Place</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Latitude)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Latitude)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Longitude)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Longitude)
        </dd>
    </dl>
</div>
<div>
    @{ if (user != null)
        {
            if (Model.Adventure.UserId == user.Id)
            {
            <a asp-action="Edit" asp-route-id="@Model.PlaceId">Edit</a> <span>|</span>
                }
            }
        }
    <a asp-controller="Adventures" asp-action="Details" asp-route-id="@Model.AdventureId">Back to List</a>
</div>
