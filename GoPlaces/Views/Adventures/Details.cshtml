@model GoPlaces.Models.Adventure
@{
    ViewData["Title"] = "Details";
}
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{var user = await UserManager.GetUserAsync(User);}

<h1>Details</h1>

<div>
    <h4>Adventure</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsPublic)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsPublic)
        </dd>
    </dl>
</div>
<div>
    @{ if (user != null)
        {
            if (Model.UserId == user.Id)
            {
                <a asp-action="Edit" asp-route-id="@Model.AdventureId">Edit</a> <span>|</span>
                <a asp-action="Create" asp-route-adventureId="@Model.AdventureId" asp-controller="Places">Add New Place</a> <span>|</span>
            }
        }
    }

    <button class="btn btn-primary" id="add-place">Test Geolocation</button>

    <a asp-controller="Adventures" asp-action="AllAdventuresIndex">Back to List</a>
</div>
<hr />
<h3>Places on this Adventure</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateCreated)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Places)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td>
                    <a asp-action="Details" asp-controller="Places" asp-route-id="@item.PlaceId">Details</a>
                    @{ if (user != null)
                        {
                            if (Model.UserId == user.Id)
                            {
                                <span>|</span> <a asp-action="Edit" asp-controller="Places" asp-route-id="@item.PlaceId">Edit</a> <span>|</span>
                                <a asp-action="Delete" asp-controller="Places" asp-route-id="@item.PlaceId">Delete</a>
                            }
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>



    <script>

        const AddButton = document.querySelector("#add-place")

        const options = {
            enableHighAccuracy: true
        }
        const err = () => {
            console.log("error")
        }

        AddButton.addEventListener("click", () => {
            const CurrentUserCurrentLocation = navigator.geolocation.getCurrentPosition((pos,) => {
                const coords = pos.coords
                const latitude = coords.latitude
                const longitude = coords.logitude
                console.log("goords", coords)
                return coords
            }, err, options)

            console.log(CurrentUserCurrentLocation)
        })

    </script>

